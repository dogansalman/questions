@model QuestionsSYS.Models.Order

@{
    ViewBag.Title = "Sipariş Detay";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-12">
        <h2>
            Sipariş Detayları
            @if (Model.state == "Onay Bekliyor")
            {
                <span style="float:right" class="label label-warning">Onay Bekleniyor</span>
            }
            @if (Model.state == "Onaylandı")
            {
                <span style="float:right" class="label label-primary">Onaylandı</span>
            }
            @if (Model.state == "Red Edildi")
            {
                <span style="float:right" class="label label-danger">Red</span>
            }
        </h2>


        <l class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Dashboards")">Yönetim</a>
            </li>
            <li>
                <a href="@Url.Action("Index", "Order")">Siparişlerim</a>
            </li>
            <li class="active">
                <strong>Sipariş Detayları</strong>
            </li>
        </l>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="ibox-content">

            <form role="form" action="/Order/Update/@Model.id" method="post">
                <div class="form-group">
                    <h2>
                        Sipariş Bilgileri
                        @if (User.IsInRole("Admin") || User.IsInRole("Logistics User"))
                        {
                            <select required style="width:200px; float:right;" name="state" id="state" class="state form-control">
                                <option @(Model.state == "Onaylandı" ? "selected" : String.Empty) value="Onaylandı">Onaylandı</option>
                                <option @(Model.state == "İptal" ? "selected" : String.Empty) value="İptal">İptal</option>
                                <option @(Model.state == "Onay Bekliyor" ? "selected" : String.Empty) value="Onay Bekliyor">Onay Bekliyor</option>
                            </select>

                        }

                    </h2>
                    <label for="customer_id">Müşteri</label>
                    <select required name="customer_id" id="customer_id" class="customer_id inline form-control">
                        <option></option>
                        @foreach (var item in ViewBag.customers)
                        {

                            <option @(item.id == Model.customer_id ? "selected" : String.Empty) value="@item.id">@item.name @item.lastname (@item.city - @item.town)</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="name">Ad</label>
                    <input autocomplete="off" type="text" placeholder="Ad" name="name" id="name" value="@Model.name" class="form-control">
                </div>
                <div class="form-group">
                    <label for="lastname">Ad</label>
                    <input autocomplete="off" type="text" placeholder="Soyad" name="last_name" id="last_name" value="@Model.last_name" class="form-control">
                </div>
                <div class="form-group">
                    <label for="address">Adres</label>
                    <textarea autocomplete="off" required type="text" cols="3" rows="3" placeholder="Adres" name="address" id="address" class="form-control">@Model.address</textarea>
                </div>
                <div class="form-group">
                    <select required name="city" id="city" class="city inline form-control">
                        <option></option>
                        @foreach (var item in ViewBag.cities)
                        {
                            <option @(item.id == Model.city ? "selected" : String.Empty) value="@item.id">@item.city_name</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <select required name="town" id="town" class="town inline form-control">
                        <option></option>
                        @foreach (var item in ViewBag.towns)
                        {
                            <option @(item.id == Model.town ? "selected" : String.Empty) value="@item.id">@item.town_name</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="phone">Tel</label>
                    <input autocomplete="off" type="number" value="@Model.phone" required type="text" placeholder="Tel" name="phone" id="phone" class="form-control">
                </div>

                <div class="form-group">
                    <label for="cargo">Kargo</label>
                    <select  @(!User.IsInRole("Admin") && !User.IsInRole("Logistics User") ? "disabled" : String.Empty) required name="cargo" id="cargo" class="cargo inline form-control">
                        <option></option>
                        @foreach (var item in ViewBag.cargo)
                        {
                            <option @(item.cargo_company == Model.cargo ? "selected" : String.Empty) value="@item.cargo_company">@item.cargo_company</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="barcode">Barkod</label>
                    <input autocomplete="off"   @(!User.IsInRole("Admin") && !User.IsInRole("Logistics User") ? "disabled" : String.Empty) type="number" value="@Model.cargo_barcode" required type="text" placeholder="Barcode" name="cargo_barcode" id="cargo_barcode" class="form-control">
                </div>

                <button class="btn  btn-primary no-margins" type="submit">Tamam</button>
            </form>
        </div>
    </div>
    <div class="wrapper wrapper-content animated fadeInRight">
        <div class="row">
            <div class="ibox-content">
                <h2>Ürün Bilgileri</h2>
                <div class="table-responsive">
                    <table class="table table-responsive">
                        <thead>
                            <tr>
                                <th>Ürün</th>
                                <th>Miktar</th>
                                <th>Fiyat</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.order_products)
                            {
                                <tr>
                                    <td>
                                        <div class="form-group">
                                            <input type="hidden" id="id" value="@item.id" />
                                            <select style="width:300px;" required name="product_name" id="products" class="products inline form-control">
                                                <option></option>
                                                @foreach (var pro in ViewBag.products)
                                                {
                                                    <option @(item.product_name == pro.product_name ? "selected" : String.Empty) value="@pro.product_name">@pro.product_name</option>
                                                }
                                            </select>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <input autocomplete="off" type="number" value="@item.qty" required placeholder="Miktar" name="qty" id="qty" class="form-control">
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <input autocomplete="off" type="text" value="@item.price" data-val-regex-pattern="([a-zA-Z0-9 .&amp;&#39;-]+)" required type="text" placeholder="Fiyat" name="price " id="price" class="form-control">
                                        </div>
                                    </td>
                                    <td>
                                        <button type="button" style="margin-left:5px;" class="btn btn-success btn-sm pull-right update_product_btn">Güncelle</button>


                                        @Ajax.ActionLink("Ürün Sil", "DeleteProduct", new { id = item.id }, new AjaxOptions { HttpMethod = "POST", OnSuccess = "Success('Ürün kaydı silindi.');", OnComplete = "LoadComplate(true);", OnFailure = "Failed('Bir hata oluştu. Tekrar deneyin');", OnBegin = "OnLoading()", Confirm = "Devam etmek istediğiniz emin misiniz ?" }, new { @class = "btn btn-danger btn-sm pull-right", @style = "margin-left: 5px;" })
                                    </td>
                                </tr>

                            }

                        </tbody>
                        <tfoot>
                            <form role="form" action="/Order/ProductsAdd/@Model.id" method="post">
                                <tr>
                                    <td colspan="3">
                                        <h3>
                                            Yeni Ürün Ekle
                                            <small>(Siparişi eklemek istediğiniz ürünü seçiniz.)</small>
                                        </h3>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <div class="form-group">
                                            <select style="width:300px" required name="product_name" id="products" class="products inline form-control">
                                                <option></option>
                                                @foreach (var item in ViewBag.products)
                                                {
                                                    <option value="@item.product_name">@item.product_name</option>
                                                }
                                            </select>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <input autocomplete="off" type="number" value="1" required type="text" placeholder="Miktar" name="qty" id="qty" class="form-control">
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <input autocomplete="off" type="text" value="" data-val-regex-pattern="([a-zA-Z0-9 .&amp;&#39;-]+)" required type="text" placeholder="Fiyat" name="price" id="price" class="form-control">
                                        </div>
                                    </td>
                                    <td><button class="btn  btn-primary no-margins" type="submit">Ekle</button></td>
                                </tr>
                            </form>
                        </tfoot>
                    </table>

                    <h2 style="display:block">Tutar: @String.Format("{0:c}", (Model.total - Model.discount))</h2>
                    <label for="discount">İndirim (TL)</label>
                    <form role="form" class="form-inline" action="/Order/Discount?order_id=@Model.id" method="post">
                        <div class="form-group">
                            <input autocomplete="off" type="text" value="@Model.discount" data-val-regex-pattern="([a-zA-Z0-9 .&amp;&#39;-]+)" required type="text" placeholder="İndirim Tutarı" name="discount" id="discount" class="form-control">
                        </div>
                        <button class="btn btn-primary" type="submit">Uygula</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles{
    @Styles.Render("~/plugins/toastrStyles")
    @Styles.Render("~/plugins/select2Styles")
}
@section Scripts{
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js");

<script type="text/javascript">

        function Success(msg) {
            toastr.success(msg, "Tamam");
        }
        function Failed(msg) {
            toastr.error(msg, "Hata")
        }

        function OnLoading() {
            $('.ibox-content').toggleClass('sk-loading');
        }

        function LoadComplate(reload_req = false) {
            if (reload_req) {
               window.location.reload();
            }
            $('.ibox-content').toggleClass('sk-loading');
        }

        if (location.search.indexOf("success=failed") > -1) {
            toastr.error("Lütfen tüm bilgileri eksiksiz doldurun.", "Hata")
        }

        if (location.search.indexOf("exist_product=1") > -1) {
            toastr.error("Eklemek istenen ürün zaten siparişte bulunmaktadır.", "Hata")
        }

        if (location.search.indexOf("success=ok") > -1) {
            toastr.success("Kayıt güncellendi.", "Tamam")
        }

        $(".customer_id").select2({
            placeholder: "Müşteri seçin",
            allowClear: true
        });


        $(".city").select2({
            placeholder: "Şehir",
            allowClear: true
        });
        $(".products").select2({
            placeholder: "Ürünler",
            allowClear: true
        });

        $(".town").select2({
            placeholder: "İlçe",
            allowClear: true
        });

        $("#city").on("change", function (e, d) {
            var city_id = $(e.target).val();
            get_towns(city_id, d)
        })


        $(".products").on("change", function (e) {
            var product_name = $(e.target).val();
            console.log(product_name);
            $.ajax({
                type: "POST",
                url: "/Product/Price?product_name=" + product_name,
                beforeSend: function () {
                    OnLoading();
                },
                success: function (r) {
                    LoadComplate();
                    if (r) {
                        $(e.target).parents("tr").find("#price").val(r.price);
                    }

                }
            });
         
        })


        function get_towns(city_id, town = null) {
            $('.town').append(null).trigger('change');
            $(".town option").remove();
            if (!city_id) return
            $.ajax({
                type: "POST",
                url: "/Customer/Town?id=" + city_id,
                beforeSend: function () {
                    OnLoading();
                },
                success: function (r) {
                    LoadComplate();
                    if (r) {
                        
                        r.forEach(s => {
                            $(".town").append("<option value='" + s.id + "'>" + s.town_name + "</option>");
                        })
                        $('.town').append(null).trigger('change');
                        if (town) $('.town').val(town.town_id).trigger("change");
                    }

                }
            });
        }

        $(".customer_id").on("change", function (e) {
            var customer_id = $(e.target).val();
            get_customer(customer_id)
        })


        function get_customer(customer_id) {

            if (!customer_id) return
            $.ajax({
                type: "POST",
                url: "/Customer/Customer?id=" + customer_id,
                data: {
                    id: customer_id
                },
                beforeSend: function () {
                    OnLoading();
                },
                success: function (r) {
                    console.log(r);
                    LoadComplate();
                    if (r) {
                        $("#name").val(r.name);
                        $("#lastname").val(r.lastname);
                        $("#address").val(r.address);
                        $("#phone").val(r.phone);
                        $("#city").val(r.city).trigger("change", { town_id: r.town });
                        $("#phone").val(r.phone);

                    }
                }
            });
        }


        $(".state").on("change", (e) => {
            var state = e.target.value;
            $.ajax({
                type: "POST",
                url: "/Order/State?order_id=" + @Model.id,
                data: {
                    state: state
                },
                beforeSend: function () {
                    OnLoading();
                },
                success: function (r) {
                    LoadComplate(true);
                }
            });

        })


        $(".update_product_btn").on('click', function (e) {
            var price = $(e.target).parents("tr").find("#price").val();
            var qty = $(e.target).parents("tr").find("#qty").val();
            var product_name = $(e.target).parents("tr").find("#products").val();
            var id = $(e.target).parents("tr").find("#id").val();

            $.ajax({
                type: "POST",
                url: "/Order/ProductUpdate?order_id=" + @Model.id,
                data: {
                    order_id: @Model.id,
                    price: price,
                    qty: qty,
                    id: id,
                    product_name: product_name

                },
                beforeSend: function () {
                    OnLoading();
                },
                success: function (r) {
                    toastr.success("Ürün güncellendi.", "Tamam")
                    LoadComplate(true);

                }
            });
        });


    if("Onay Bekliyor" != "@Model.state.ToString()") {
        $("input").attr("readonly", true)
        $("textarea").attr("readonly", true)
        $(".ibox-content button").attr("disabled", true)
        $(".ibox-content a").attr("disabled", true)
    }


</script>
}
