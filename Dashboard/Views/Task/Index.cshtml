@model IPagedList<QuestionsSYS.ModelViews.TaskListView>
@using PagedList
@using PagedList.Mvc

@{
    ViewBag.Title = "Görevler";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Görevler</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Dashboards")">Yönetim</a>
            </li>
            <li class="active">
                <strong><a>Görevler</a></strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2"></div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row ibox-content">
        <div class="sk-spinner sk-spinner-double-bounce">
            <div class="sk-double-bounce1"></div>
            <div class="sk-double-bounce2"></div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <select name="state" id="state" class="state_select inline form-control">
                        <option></option>
                        @foreach (var item in ViewBag.states)
                        {
                            <option value="@item.name">@item.name</option>
                        }
                        <option value="İşlem Bekleniyor">İşlem Bekleniyor</option>
                    </select>
                </div>

            </div>

            @if (User.IsInRole("Admin"))
            {
                <div class="col-md-3">
                    <div class="form-group">
                        <select name="personnel" id="personnel" class="personnel_select inline form-control">
                            <option></option>
                            @foreach (var item in ViewBag.personnel)
                            {
                                <option value="@item.Id">@item.Name  @item.Surname</option>
                            }
                        </select>
                    </div>

                </div>
            }
            
            
            <div class="col-md-6 pull-right">
                <div class="input-group">
                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "input-sm form-control searchterm", @placeholder = "Ad, Soyad, Tel" })
                    <span class="input-group-btn">
                        <input type="button" id="search-btn"  class="btn btn-sm btn-primary search" value="Ara" />
                    </span>
                </div>
            </div>
        </div>

        <div id="list-container"></div>
            
        <div class="m-t-md">
            <small class="pull-right">
                Son Liste Tarihi: @Html.Label(DateTime.Now.ToLongDateString())
            </small>

        </div>
    </div>
</div>

@section Styles{
    @Styles.Render("~/plugins/toastrStyles")
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/select2Styles")
}

@section Scripts{
@Scripts.Render("~/plugins/toastr")
@Scripts.Render("~/plugins/select2")
@Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js");
<script>
    function updateQueryStringParameter(uri, key, value) {
        var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
        var separator = uri.indexOf('?') !== -1 ? "&" : "?";
        if (uri.match(re)) {
            return uri.replace(re, '$1' + key + "=" + value + '$2');
        }
        else {
            return uri + separator + key + "=" + value;
        }
    }
    function removeURLParameter(url, parameter) {
        //prefer to use l.search if you have a location/link object
        var urlparts = url.split('?');
        if (urlparts.length >= 2) {

            var prefix = encodeURIComponent(parameter) + '=';
            var pars = urlparts[1].split(/[&;]/g);

            //reverse iteration as may be destructive
            for (var i = pars.length; i-- > 0;) {
                //idiom for string.startsWith
                if (pars[i].lastIndexOf(prefix, 0) !== -1) {
                    pars.splice(i, 1);
                }
            }

            url = urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : "");
            return url;
        } else {
            return url;
        }
    }
    function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }
    function PageBegin() {
        $('.ibox-content').toggleClass('sk-loading');
    }
    function PageComplate() {
        $('.ibox-content').toggleClass('sk-loading');
    }


    $(document).ready(function () {

        $(".state_select").select2({
            placeholder: "Görev Durumu",
            allowClear: true
        });
        $(".personnel_select").select2({
            placeholder: "Personel seçin",
            allowClear: true
        });


        $("#personnel").on("change", function (e) {

           // $('.state_select').val(null).trigger('change');
           // $('.searchterm').val('');

            var personnelId = $(e.target).val();
            var QueryString = getParameterByName("filter") || "All";

            var url = updateQueryStringParameter(location.href, "personnel", personnelId);

            window.history.pushState({ path: url }, '', url);

            if (!personnelId) url = removeURLParameter(url, "personnel");

            $.ajax({
                type: "GET",
                url: QueryString + new URL(url).search,
                beforeSend: function () {
                    PageBegin();
                },
                success: function (responseData) {
                    PageComplate();
                    $('#list-container').html(responseData);
                }
            });
        })

        $("#state").on("change", function (e) {

            var typeName = $(e.target).val();
            var QueryString = getParameterByName("filter") || "All";

            var url = updateQueryStringParameter(location.href, "type", typeName);
           
            window.history.pushState({ path: url }, '', url);
            
            if (!typeName) url = removeURLParameter(url, "type");

            $.ajax({
                type: "GET",
                url: QueryString + new URL(url).search,
                beforeSend: function () {
                    PageBegin();
                },
                success: function (responseData) {
                    PageComplate();
                    $('#list-container').html(responseData);
                }
            });
        })
        var query = getParameterByName("filter") || "All";

        $("#search-btn").on("click", function () {
            
            var SearchString = $(".searchterm").val();
            var QueryString = getParameterByName("filter") || "All";


            var url = updateQueryStringParameter(location.href, "filter", QueryString);
            url = updateQueryStringParameter(url, "SearchString", SearchString);

            var newurl = url;
            window.history.pushState({ path: newurl }, '', newurl);

            $.ajax({
                type: "GET",
                url: QueryString + "?SearchString=" + SearchString,
                beforeSend: function () {
                    PageBegin();
                },
                success: function (responseData) {
                    PageComplate();
                    $('#list-container').html(responseData);
                }
            });
        });

        

        $.ajax({
            type: "GET",
            url: query,
            beforeSend: function () {
                PageBegin();
            },
            success: function (responseData) {
                PageComplate();
                $('#list-container').html(responseData);
            }
        });

     

    });

</script>
}
